using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace SEOCore.Model
{
    public class StopWord
    {
        public string SWord { get; set; }
        public static List<StopWord> ListStopWord()
        {
            List<StopWord> NewList = new List<StopWord>();

            NewList.Add(new StopWord() { SWord = "a" });
            NewList.Add(new StopWord() { SWord = "about" });
            NewList.Add(new StopWord() { SWord = "above" });
            NewList.Add(new StopWord() { SWord = "across" });
            NewList.Add(new StopWord() { SWord = "after" });
            NewList.Add(new StopWord() { SWord = "afterwards" });
            NewList.Add(new StopWord() { SWord = "again" });
            NewList.Add(new StopWord() { SWord = "against" });
            NewList.Add(new StopWord() { SWord = "all" });
            NewList.Add(new StopWord() { SWord = "almost" });
            NewList.Add(new StopWord() { SWord = "alone" });
            NewList.Add(new StopWord() { SWord = "along" });
            NewList.Add(new StopWord() { SWord = "already" });
            NewList.Add(new StopWord() { SWord = "also" });
            NewList.Add(new StopWord() { SWord = "although" });
            NewList.Add(new StopWord() { SWord = "always" });
            NewList.Add(new StopWord() { SWord = "am" });
            NewList.Add(new StopWord() { SWord = "among" });
            NewList.Add(new StopWord() { SWord = "amongst" });
            NewList.Add(new StopWord() { SWord = "amount" });
            NewList.Add(new StopWord() { SWord = "an" });
            NewList.Add(new StopWord() { SWord = "and" });
            NewList.Add(new StopWord() { SWord = "another" });
            NewList.Add(new StopWord() { SWord = "any" });
            NewList.Add(new StopWord() { SWord = "anyhow" });
            NewList.Add(new StopWord() { SWord = "anyone" });
            NewList.Add(new StopWord() { SWord = "anything" });
            NewList.Add(new StopWord() { SWord = "anyway" });
            NewList.Add(new StopWord() { SWord = "anywhere" });
            NewList.Add(new StopWord() { SWord = "are" });
            NewList.Add(new StopWord() { SWord = "around" });
            NewList.Add(new StopWord() { SWord = "as" });
            NewList.Add(new StopWord() { SWord = "at" });
            NewList.Add(new StopWord() { SWord = "back" });
            NewList.Add(new StopWord() { SWord = "be" });
            NewList.Add(new StopWord() { SWord = "became" });
            NewList.Add(new StopWord() { SWord = "because" });
            NewList.Add(new StopWord() { SWord = "become" });
            NewList.Add(new StopWord() { SWord = "becomes" });
            NewList.Add(new StopWord() { SWord = "becoming" });
            NewList.Add(new StopWord() { SWord = "been" });
            NewList.Add(new StopWord() { SWord = "before" });
            NewList.Add(new StopWord() { SWord = "beforehand" });
            NewList.Add(new StopWord() { SWord = "behind" });
            NewList.Add(new StopWord() { SWord = "being" });
            NewList.Add(new StopWord() { SWord = "below" });
            NewList.Add(new StopWord() { SWord = "beside" });
            NewList.Add(new StopWord() { SWord = "besides" });
            NewList.Add(new StopWord() { SWord = "between" });
            NewList.Add(new StopWord() { SWord = "beyond" });
            NewList.Add(new StopWord() { SWord = "bill" });
            NewList.Add(new StopWord() { SWord = "both" });
            NewList.Add(new StopWord() { SWord = "bottom" });
            NewList.Add(new StopWord() { SWord = "but" });
            NewList.Add(new StopWord() { SWord = "by" });
            NewList.Add(new StopWord() { SWord = "call" });
            NewList.Add(new StopWord() { SWord = "can" });
            NewList.Add(new StopWord() { SWord = "cannot" });
            NewList.Add(new StopWord() { SWord = "cant" });
            NewList.Add(new StopWord() { SWord = "co" });
            NewList.Add(new StopWord() { SWord = "computer" });
            NewList.Add(new StopWord() { SWord = "con" });
            NewList.Add(new StopWord() { SWord = "could" });
            NewList.Add(new StopWord() { SWord = "couldnt" });
            NewList.Add(new StopWord() { SWord = "cry" });
            NewList.Add(new StopWord() { SWord = "de" });
            NewList.Add(new StopWord() { SWord = "describe" });
            NewList.Add(new StopWord() { SWord = "detail" });
            NewList.Add(new StopWord() { SWord = "do" });
            NewList.Add(new StopWord() { SWord = "done" });
            NewList.Add(new StopWord() { SWord = "down" });
            NewList.Add(new StopWord() { SWord = "due" });
            NewList.Add(new StopWord() { SWord = "during" });
            NewList.Add(new StopWord() { SWord = "each" });
            NewList.Add(new StopWord() { SWord = "eg" });
            NewList.Add(new StopWord() { SWord = "eight" });
            NewList.Add(new StopWord() { SWord = "either" });
            NewList.Add(new StopWord() { SWord = "eleven" });
            NewList.Add(new StopWord() { SWord = "else" });
            NewList.Add(new StopWord() { SWord = "elsewhere" });
            NewList.Add(new StopWord() { SWord = "empty" });
            NewList.Add(new StopWord() { SWord = "enough" });
            NewList.Add(new StopWord() { SWord = "etc" });
            NewList.Add(new StopWord() { SWord = "even" });
            NewList.Add(new StopWord() { SWord = "ever" });
            NewList.Add(new StopWord() { SWord = "every" });
            NewList.Add(new StopWord() { SWord = "everyone" });
            NewList.Add(new StopWord() { SWord = "everything" });
            NewList.Add(new StopWord() { SWord = "everywhere" });
            NewList.Add(new StopWord() { SWord = "except" });
            NewList.Add(new StopWord() { SWord = "few" });
            NewList.Add(new StopWord() { SWord = "fifteen" });
            NewList.Add(new StopWord() { SWord = "fify" });
            NewList.Add(new StopWord() { SWord = "fill" });
            NewList.Add(new StopWord() { SWord = "find" });
            NewList.Add(new StopWord() { SWord = "fire" });
            NewList.Add(new StopWord() { SWord = "first" });
            NewList.Add(new StopWord() { SWord = "five" });
            NewList.Add(new StopWord() { SWord = "for" });
            NewList.Add(new StopWord() { SWord = "former" });
            NewList.Add(new StopWord() { SWord = "formerly" });
            NewList.Add(new StopWord() { SWord = "forty" });
            NewList.Add(new StopWord() { SWord = "found" });
            NewList.Add(new StopWord() { SWord = "four" });
            NewList.Add(new StopWord() { SWord = "from" });
            NewList.Add(new StopWord() { SWord = "front" });
            NewList.Add(new StopWord() { SWord = "full" });
            NewList.Add(new StopWord() { SWord = "further" });
            NewList.Add(new StopWord() { SWord = "get" });
            NewList.Add(new StopWord() { SWord = "give" });
            NewList.Add(new StopWord() { SWord = "go" });
            NewList.Add(new StopWord() { SWord = "had" });
            NewList.Add(new StopWord() { SWord = "has" });
            NewList.Add(new StopWord() { SWord = "have" });
            NewList.Add(new StopWord() { SWord = "he" });
            NewList.Add(new StopWord() { SWord = "hence" });
            NewList.Add(new StopWord() { SWord = "her" });
            NewList.Add(new StopWord() { SWord = "here" });
            NewList.Add(new StopWord() { SWord = "hereafter" });
            NewList.Add(new StopWord() { SWord = "hereby" });
            NewList.Add(new StopWord() { SWord = "herein" });
            NewList.Add(new StopWord() { SWord = "hereupon" });
            NewList.Add(new StopWord() { SWord = "hers" });
            NewList.Add(new StopWord() { SWord = "herself" });
            NewList.Add(new StopWord() { SWord = "him" });
            NewList.Add(new StopWord() { SWord = "himself" });
            NewList.Add(new StopWord() { SWord = "his" });
            NewList.Add(new StopWord() { SWord = "how" });
            NewList.Add(new StopWord() { SWord = "however" });
            NewList.Add(new StopWord() { SWord = "hundred" });
            NewList.Add(new StopWord() { SWord = "i" });
            NewList.Add(new StopWord() { SWord = "ie" });
            NewList.Add(new StopWord() { SWord = "if" });
            NewList.Add(new StopWord() { SWord = "in" });
            NewList.Add(new StopWord() { SWord = "inc" });
            NewList.Add(new StopWord() { SWord = "indeed" });
            NewList.Add(new StopWord() { SWord = "interest" });
            NewList.Add(new StopWord() { SWord = "into" });
            NewList.Add(new StopWord() { SWord = "is" });
            NewList.Add(new StopWord() { SWord = "it" });
            NewList.Add(new StopWord() { SWord = "its" });
            NewList.Add(new StopWord() { SWord = "itself" });
            NewList.Add(new StopWord() { SWord = "keep" });
            NewList.Add(new StopWord() { SWord = "last" });
            NewList.Add(new StopWord() { SWord = "latter" });
            NewList.Add(new StopWord() { SWord = "latterly" });
            NewList.Add(new StopWord() { SWord = "least" });
            NewList.Add(new StopWord() { SWord = "less" });
            NewList.Add(new StopWord() { SWord = "ltd" });
            NewList.Add(new StopWord() { SWord = "made" });
            NewList.Add(new StopWord() { SWord = "many" });
            NewList.Add(new StopWord() { SWord = "may" });
            NewList.Add(new StopWord() { SWord = "me" });
            NewList.Add(new StopWord() { SWord = "meanwhile" });
            NewList.Add(new StopWord() { SWord = "might" });
            NewList.Add(new StopWord() { SWord = "mill" });
            NewList.Add(new StopWord() { SWord = "mine" });
            NewList.Add(new StopWord() { SWord = "more" });
            NewList.Add(new StopWord() { SWord = "moreover" });
            NewList.Add(new StopWord() { SWord = "most" });
            NewList.Add(new StopWord() { SWord = "mostly" });
            NewList.Add(new StopWord() { SWord = "move" });
            NewList.Add(new StopWord() { SWord = "much" });
            NewList.Add(new StopWord() { SWord = "must" });
            NewList.Add(new StopWord() { SWord = "my" });
            NewList.Add(new StopWord() { SWord = "myself" });
            NewList.Add(new StopWord() { SWord = "name" });
            NewList.Add(new StopWord() { SWord = "namely" });
            NewList.Add(new StopWord() { SWord = "neither" });
            NewList.Add(new StopWord() { SWord = "never" });
            NewList.Add(new StopWord() { SWord = "nevertheless" });
            NewList.Add(new StopWord() { SWord = "next" });
            NewList.Add(new StopWord() { SWord = "nine" });
            NewList.Add(new StopWord() { SWord = "no" });
            NewList.Add(new StopWord() { SWord = "nobody" });
            NewList.Add(new StopWord() { SWord = "none" });
            NewList.Add(new StopWord() { SWord = "nor" });
            NewList.Add(new StopWord() { SWord = "not" });
            NewList.Add(new StopWord() { SWord = "nothing" });
            NewList.Add(new StopWord() { SWord = "now" });
            NewList.Add(new StopWord() { SWord = "nowhere" });
            NewList.Add(new StopWord() { SWord = "of" });
            NewList.Add(new StopWord() { SWord = "off" });
            NewList.Add(new StopWord() { SWord = "often" });
            NewList.Add(new StopWord() { SWord = "on" });
            NewList.Add(new StopWord() { SWord = "once" });
            NewList.Add(new StopWord() { SWord = "one" });
            NewList.Add(new StopWord() { SWord = "only" });
            NewList.Add(new StopWord() { SWord = "onto" });
            NewList.Add(new StopWord() { SWord = "or" });
            NewList.Add(new StopWord() { SWord = "other" });
            NewList.Add(new StopWord() { SWord = "others" });
            NewList.Add(new StopWord() { SWord = "otherwise" });
            NewList.Add(new StopWord() { SWord = "our" });
            NewList.Add(new StopWord() { SWord = "ours" });
            NewList.Add(new StopWord() { SWord = "ourselves" });
            NewList.Add(new StopWord() { SWord = "out" });
            NewList.Add(new StopWord() { SWord = "over" });
            NewList.Add(new StopWord() { SWord = "own" });
            NewList.Add(new StopWord() { SWord = "part" });
            NewList.Add(new StopWord() { SWord = "per" });
            NewList.Add(new StopWord() { SWord = "perhaps" });
            NewList.Add(new StopWord() { SWord = "please" });
            NewList.Add(new StopWord() { SWord = "put" });
            NewList.Add(new StopWord() { SWord = "rather" });
            NewList.Add(new StopWord() { SWord = "re" });
            NewList.Add(new StopWord() { SWord = "same" });
            NewList.Add(new StopWord() { SWord = "see" });
            NewList.Add(new StopWord() { SWord = "seem" });
            NewList.Add(new StopWord() { SWord = "seemed" });
            NewList.Add(new StopWord() { SWord = "seeming" });
            NewList.Add(new StopWord() { SWord = "seems" });
            NewList.Add(new StopWord() { SWord = "serious" });
            NewList.Add(new StopWord() { SWord = "several" });
            NewList.Add(new StopWord() { SWord = "she" });
            NewList.Add(new StopWord() { SWord = "should" });
            NewList.Add(new StopWord() { SWord = "show" });
            NewList.Add(new StopWord() { SWord = "side" });
            NewList.Add(new StopWord() { SWord = "since" });
            NewList.Add(new StopWord() { SWord = "sincere" });
            NewList.Add(new StopWord() { SWord = "six" });
            NewList.Add(new StopWord() { SWord = "sixty" });
            NewList.Add(new StopWord() { SWord = "so" });
            NewList.Add(new StopWord() { SWord = "some" });
            NewList.Add(new StopWord() { SWord = "somehow" });
            NewList.Add(new StopWord() { SWord = "someone" });
            NewList.Add(new StopWord() { SWord = "something" });
            NewList.Add(new StopWord() { SWord = "sometime" });
            NewList.Add(new StopWord() { SWord = "sometimes" });
            NewList.Add(new StopWord() { SWord = "somewhere" });
            NewList.Add(new StopWord() { SWord = "still" });
            NewList.Add(new StopWord() { SWord = "such" });
            NewList.Add(new StopWord() { SWord = "system" });
            NewList.Add(new StopWord() { SWord = "take" });
            NewList.Add(new StopWord() { SWord = "ten" });
            NewList.Add(new StopWord() { SWord = "than" });
            NewList.Add(new StopWord() { SWord = "that" });
            NewList.Add(new StopWord() { SWord = "the" });
            NewList.Add(new StopWord() { SWord = "their" });
            NewList.Add(new StopWord() { SWord = "them" });
            NewList.Add(new StopWord() { SWord = "themselves" });
            NewList.Add(new StopWord() { SWord = "then" });
            NewList.Add(new StopWord() { SWord = "thence" });
            NewList.Add(new StopWord() { SWord = "there" });
            NewList.Add(new StopWord() { SWord = "thereafter" });
            NewList.Add(new StopWord() { SWord = "thereby" });
            NewList.Add(new StopWord() { SWord = "therefore" });
            NewList.Add(new StopWord() { SWord = "therein" });
            NewList.Add(new StopWord() { SWord = "thereupon" });
            NewList.Add(new StopWord() { SWord = "these" });
            NewList.Add(new StopWord() { SWord = "they" });
            NewList.Add(new StopWord() { SWord = "thick" });
            NewList.Add(new StopWord() { SWord = "thin" });
            NewList.Add(new StopWord() { SWord = "third" });
            NewList.Add(new StopWord() { SWord = "this" });
            NewList.Add(new StopWord() { SWord = "those" });
            NewList.Add(new StopWord() { SWord = "though" });
            NewList.Add(new StopWord() { SWord = "three" });
            NewList.Add(new StopWord() { SWord = "through" });
            NewList.Add(new StopWord() { SWord = "throughout" });
            NewList.Add(new StopWord() { SWord = "thru" });
            NewList.Add(new StopWord() { SWord = "thus" });
            NewList.Add(new StopWord() { SWord = "to" });
            NewList.Add(new StopWord() { SWord = "together" });
            NewList.Add(new StopWord() { SWord = "too" });
            NewList.Add(new StopWord() { SWord = "top" });
            NewList.Add(new StopWord() { SWord = "toward" });
            NewList.Add(new StopWord() { SWord = "towards" });
            NewList.Add(new StopWord() { SWord = "twelve" });
            NewList.Add(new StopWord() { SWord = "twenty" });
            NewList.Add(new StopWord() { SWord = "two" });
            NewList.Add(new StopWord() { SWord = "un" });
            NewList.Add(new StopWord() { SWord = "under" });
            NewList.Add(new StopWord() { SWord = "until" });
            NewList.Add(new StopWord() { SWord = "up" });
            NewList.Add(new StopWord() { SWord = "upon" });
            NewList.Add(new StopWord() { SWord = "us" });
            NewList.Add(new StopWord() { SWord = "very" });
            NewList.Add(new StopWord() { SWord = "via" });
            NewList.Add(new StopWord() { SWord = "was" });
            NewList.Add(new StopWord() { SWord = "we" });
            NewList.Add(new StopWord() { SWord = "well" });
            NewList.Add(new StopWord() { SWord = "were" });
            NewList.Add(new StopWord() { SWord = "what" });
            NewList.Add(new StopWord() { SWord = "whatever" });
            NewList.Add(new StopWord() { SWord = "when" });
            NewList.Add(new StopWord() { SWord = "whence" });
            NewList.Add(new StopWord() { SWord = "whenever" });
            NewList.Add(new StopWord() { SWord = "where" });
            NewList.Add(new StopWord() { SWord = "whereafter" });
            NewList.Add(new StopWord() { SWord = "whereas" });
            NewList.Add(new StopWord() { SWord = "whereby" });
            NewList.Add(new StopWord() { SWord = "wherein" });
            NewList.Add(new StopWord() { SWord = "whereupon" });
            NewList.Add(new StopWord() { SWord = "wherever" });
            NewList.Add(new StopWord() { SWord = "whether" });
            NewList.Add(new StopWord() { SWord = "which" });
            NewList.Add(new StopWord() { SWord = "while" });
            NewList.Add(new StopWord() { SWord = "whither" });
            NewList.Add(new StopWord() { SWord = "who" });
            NewList.Add(new StopWord() { SWord = "whoever" });
            NewList.Add(new StopWord() { SWord = "whole" });
            NewList.Add(new StopWord() { SWord = "whom" });
            NewList.Add(new StopWord() { SWord = "whose" });
            NewList.Add(new StopWord() { SWord = "why" });
            NewList.Add(new StopWord() { SWord = "will" });
            NewList.Add(new StopWord() { SWord = "with" });
            NewList.Add(new StopWord() { SWord = "within" });
            NewList.Add(new StopWord() { SWord = "without" });
            NewList.Add(new StopWord() { SWord = "would" });
            NewList.Add(new StopWord() { SWord = "yet" });
            NewList.Add(new StopWord() { SWord = "you" });
            NewList.Add(new StopWord() { SWord = "your" });
            NewList.Add(new StopWord() { SWord = "yours" });
            NewList.Add(new StopWord() { SWord = "yourself" });
            NewList.Add(new StopWord() { SWord = "yourselves" });
            return NewList;
        }
    }
}
